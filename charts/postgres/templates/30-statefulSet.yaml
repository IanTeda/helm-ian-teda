apiVersion: apps/v1
kind: StatefulSet

metadata:
  name: {{ include "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}

spec:
  serviceName: {{ include "postgres.fullname" . }}

  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}

  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      selector:
        matchLabels:
          {{- include "postgres.labels" . | nindent 12 }}
      storageClassName: {{ .Values.volume.storageClassName }}
      accessModes: ["{{ .Values.volume.accessModes }}"]
      resources:
        requests:
          storage: "{{ .Values.volume.size }}"

  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}

    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      serviceAccountName: {{ include "postgres.serviceAccountName" . }}

      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          ports:
            - name: database
              containerPort: 5432
              protocol: TCP
          
          envFrom:
            - secretRef:
                name: {{ include "postgres.fullname" . }}
            - configMapRef:
                name: {{ include "postgres.fullname" . }}

          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -h localhost
            initialDelaySeconds: 120
            failureThreshold: 10
            timeoutSeconds: 5

          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -h localhost
            initialDelaySeconds: 120
            failureThreshold: 10
            timeoutSeconds: 5

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          volumeMounts:
            - name: data
              mountPath: {{ .Values.config.pgData }}
              subPath: {{ .Values.nfs.subPath }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
